<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Entrepreneurship on nathan leclaire </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://localhost:1313/categories/entrepreneurship/index.xml</link>
    
    
    
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title>5 Reasons We Won Startup Weekend</title>
      <link>http://localhost:1313/posts/2014-02-10-5-reasons-we-won-startup-weekend</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/posts/2014-02-10-5-reasons-we-won-startup-weekend</guid>
      <description>

&lt;p&gt;This previous weekend I participated in &lt;a href=&#34;http://annarbor.startupweekend.org/&#34;&gt;Ann Arbor Startup Weekend&lt;/a&gt; and had a blast.  Our company&amp;rsquo;s name is &lt;a href=&#34;http://fixworthy.co&#34;&gt;Fixworthy&lt;/a&gt; and we built a photo-based bug tracking app for real life (think Github Issues meets Instagram).&lt;/p&gt;

&lt;p&gt;{%img /images/swaa/fixworthy.jpeg Hail to the victors. %}&lt;/p&gt;

&lt;p&gt;Of course we worked hard on it, lost some sleep etc. but everyone does that.  There were some special factors at play in our case that helped us win such as:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt; and Frequent Deploying&lt;/li&gt;
&lt;li&gt;Emphasizing &amp;ldquo;Done Is Better Than Perfect&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Good Design and Aesthetics&lt;/li&gt;
&lt;li&gt;Finding a Use For Everybody (especially developers)&lt;/li&gt;
&lt;li&gt;Following the Pain and the Money&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Of course, all of these are forces stem from having a smart, talented, and easy-to-work-with team as well.  Let&amp;rsquo;s get into some specifics, shall we?&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Vagrant and Frequent Deploying&lt;/h1&gt;

&lt;p&gt;{%img /images/swaa/vagrant.png Up up and away. %}&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to start off with a technical point to hook in my fellow nerds here.&lt;/p&gt;

&lt;p&gt;The very first technical thing that we (the developers) did, on Friday night after working our way through the vision of the product and what we thought its most important features should be, was to get started hacking.  We knew that to ship a working product quickly it would be an enourmous boon to be:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Working on the same platform so that any issues which came up would have ubiquitous solutions, &lt;em&gt;and&lt;/em&gt;:&lt;/li&gt;
&lt;li&gt;Working in an environment that was extremely close to the environment we would be deploying our production solution to (ever have those awkward it-worked-on-my-machine production bugs?)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Most companies account for this by having everyone work in the cloud on EC2 instances or what have you, or simply by forcing their developers to all use the same operating system (which we kind of did a variant of).  In our case there was no way developing in the cloud was going to work (we had too little time or money) and our dev team was split about 50/50 between OSX and Windows so we decided to use &lt;a href=&#34;http://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt;, a &amp;ldquo;free and open-source software for creating and configuring virtual development environments&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Vagrant is awesome, although I&amp;rsquo;m a little disappointed they have moved away from their original logo which features this scrappy dude:&lt;/p&gt;

&lt;p&gt;{%img /images/swaa/vagrant_chilling.png %}&lt;/p&gt;

&lt;p&gt;We made everyone download and install Vagrant / VirtualBox (which Vagrant depends on) and use &lt;a href=&#34;https://github.com/bryannielsen/Laravel4-Vagrant&#34;&gt;this configuration&lt;/a&gt;, which orchestrates the installation of a LAMP stack and the &lt;a href=&#34;http://laravel.com/&#34;&gt;Laravel framework&lt;/a&gt; using Puppet.  It took a little while for all of the dependencies to install on everyone&amp;rsquo;s computer but we were able to sit back and sip a little beer while Puppet did most of the heavy lifting.  Once Puppet was all done, everyone could point their host OS&amp;rsquo;s browser to &lt;code&gt;http://localhost:8888&lt;/code&gt; and be greeted by a freshly minted Laravel install.  Shared folders allowed us all to get started hacking right away, which was seriously awesome for productivity.&lt;/p&gt;

&lt;p&gt;This system also made it super easy to deploy frequently, since we just pulled in our changes to a git repo hosted on the prod server, ran the migrations and database seeds and &lt;em&gt;voila&lt;/em&gt;, we were done deploying.  No nasty production surprises.&lt;/p&gt;

&lt;p&gt;One last point here, on the geeky technical side of things:  There was no squabbling over PHP vs. Rails or CodeIgniter vs. CakePHP or any of that kind of stuff that you are surely familiar with, we simply all worked towards the common good however we could.  We had a couple of guys who traditionally stuck to Ruby or .NET, for instance, that picked up front-end work since it was where the could be the most productive, the quickest.  This kind of put-the-team-first mentality is priceless for getting things done quickly.&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;Emphasizing &amp;ldquo;Done Is Better Than Perfect&amp;rdquo;&lt;/h1&gt;

&lt;p&gt;{%img /images/swaa/done_is_better.png Lookin&amp;rsquo; good. %}&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve all probably heard this one &lt;a href=&#34;http://www.etsy.com/blog/en/2013/why-done-is-better-than-perfect/&#34;&gt;a ton of times&lt;/a&gt;, so I won&amp;rsquo;t spend &lt;em&gt;too&lt;/em&gt; much time on it, but I do believe it played a huge role in our ability to push forward as a team and succeed.  Especially on front-end stuff I have way too much of a tendency towards &amp;ldquo;perfectionism&amp;rdquo; that can be counterproductive at best and harmful at worst as I am stricken by analysis paralysis and self-doubt.&lt;/p&gt;

&lt;p&gt;Whenever we had moments of self-doubt about the product, or our implementation (though these were surprisingly rare on the tech side) we asked ourselves: &amp;ldquo;Is this helping us to deliver a quality product that is aligned with our vision for what this should be?&amp;rdquo; and if the answer was no, we stoically carried onward.  There were definitely parts of the app that left something to be desired (security concerns are a notable one on the backend side- though hopefully the framework helps a bit with that), but there always are, and for a weekend project I was ecstatically happy with the end result.&lt;/p&gt;

&lt;p&gt;I was shocked how quickly we could ship something that was working, if not ideal, and begin validating it with users and prospective clients.  That creates a tight feedback loop and gets the commits a-flyin&amp;rsquo;.&lt;/p&gt;

&lt;h1 id=&#34;toc_2&#34;&gt;Good Design and Aesthetics&lt;/h1&gt;

&lt;p&gt;{%img /images/swaa/fw_logo.png Lookin&amp;rsquo; good. %}&lt;/p&gt;

&lt;p&gt;Did you know that users begin forming impressions of a website&amp;rsquo;s &amp;ldquo;visual appeal&amp;rdquo; in &lt;a href=&#34;http://www.websiteoptimization.com/speed/tweak/blink/&#34;&gt;as little as 50 milliseconds&lt;/a&gt;?  That&amp;rsquo;s 50 milliseconds quicker than the &lt;a href=&#34;http://stackoverflow.com/questions/536300/what-is-the-shortest-perceivable-application-response-delay&#34;&gt;minimum application response delay humans are able to perceive&lt;/a&gt;.  In other words, users decide if your website is beautiful or if it is garbage very, &lt;em&gt;very&lt;/em&gt;, quickly.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.klsy.co/&#34;&gt;Kelsey&lt;/a&gt; was our design ringer and boy am I ever glad she was on our team.  There&amp;rsquo;s no doubt that &lt;a href=&#34;http://en.wikipedia.org/wiki/A_picture_is_worth_a_thousand_words&#34;&gt;a picture is worth a thousand words&lt;/a&gt; and having a designer allowed us to take our website from &amp;ldquo;awkward-Bootstrap-import-and-fuhgettaboutit&amp;rdquo; to &amp;ldquo;clean, lean, eye-candy &lt;em&gt;machine&lt;/em&gt;&amp;rdquo;.  A logo is a condensed visual statement-of-purpose-of-sorts and I was super happy with the logo designed for Fixworthy, which you can see above (I&amp;rsquo;m a little biased because my favorite color is orange).&lt;/p&gt;

&lt;p&gt;Having good design instantly improves your social media presence (check that backdrop on our &lt;a href=&#34;twitter.com/fixworthy&#34;&gt;Twitter page&lt;/a&gt;!), the initial reaction that your users have as they begin forming a relationship with your product, and more.  It&amp;rsquo;s well known that &lt;a href=&#34;http://econsultancy.com/blog/62391-do-bigger-images-mean-improved-conversion-rates-three-case-studies&#34;&gt;big images increase conversion rates&lt;/a&gt;, and having those design chops on our side really gave us some serious momentum on our side towards converting the people who really needed to be swayed in this case- the judges.&lt;/p&gt;

&lt;h1 id=&#34;toc_3&#34;&gt;Finding a Use For Everybody (especially developers)&lt;/h1&gt;

&lt;p&gt;{%img /images/swaa/steve_ballmer_is_awesome.gif This man knows. %}&lt;/p&gt;

&lt;p&gt;When some of the hopefuls pitched their ideas or were trying to sell them to get people to join their team, there were a few who stood on stage and said in all honesty &amp;ldquo;I&amp;rsquo;m not looking for any other developers to join&amp;rdquo; while all the devs in the room&amp;rsquo;s collective jaws dropped.  Our feelings of surprise were validated late on Saturday when about three or four companies went up to the mic again to try and persuade developers already engaged with one team to switch to their own.&lt;/p&gt;

&lt;p&gt;In a sense I can see how a technical founder might not want to run the risk of having a bunch of newbies or bad programmers stomping around in their precious self-written code, but at the same time it stunned me that anyone would turn away someone willing to help with such a short deadline in tow (especially with how tight the demand is for technical talent).  The odds of getting a real stinker in your group were pretty low, considering that it was a University of Michigan-centric event, and it struck me more as vanity than anything else that people were willing to turn away perfectly good (free!) talent.&lt;/p&gt;

&lt;p&gt;Our company didn&amp;rsquo;t turn anyone away and tried to find a use for everyone.  As mentioned, some of the developers were a little more comfortable with back-end stacks other than LAMP, and so they cordially agreed to work on the front-end.  Our team member &lt;a href=&#34;http://wilsonproductive.com/&#34;&gt;Greg&lt;/a&gt; felt that he was best at social media / marketing stuff, so he whipped up an Instagram and Twitter presence at lightning speed.  Our business team began pounding the pavement by doing market research, performing user testing, and getting in touch with potential customers (organizations for whom this technology would be useful, perhaps if they wanted private issue tracking).&lt;/p&gt;

&lt;p&gt;All in all, we made a hugely concentrated effort to rake in as much value as possible from every single person who wanted to help.  This helped bolster everyone&amp;rsquo;s moral and enthusiasm, let them play to their strengths, and paid off for us as a team.&lt;/p&gt;

&lt;h1 id=&#34;toc_4&#34;&gt;Following the Pain and the Money&lt;/h1&gt;

&lt;p&gt;{%img /images/swaa/mo_money_mo_problems.jpeg %}&lt;/p&gt;

&lt;p&gt;This is still a major pivot/focus point for the startup if we continue going (and there&amp;rsquo;s a lot of wind in our sails right now), but I think that a large part of why the group was able to be successful was that we didn&amp;rsquo;t kid ourselves about the fact that we were building something to create wealth by:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Easing pain points for people, especially those with cash to throw at the problem e.g. businesses and universities&lt;/li&gt;
&lt;li&gt;Making money.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Granted, there was a lot of hand-wringing about &lt;em&gt;how&lt;/em&gt; we were going to accomplish this, but I think several of the core engineers (particularly &lt;a href=&#34;http://scottdlowe.com/&#34;&gt;Scott&lt;/a&gt;) had a vision about this product was going to fly, and didn&amp;rsquo;t let a relentless enthusiasm for making a fantastically great product interfere with the reality that we needed to make money from this somehow.  A favorite line to throw at our business team, when they would try to persuade us to take the product in a different direction, was &amp;ldquo;get us someone who will write us a check for the V1 of this app when it is finished&amp;rdquo;.  That really put things into perspective.  Shouldn&amp;rsquo;t every aspiring entrepreneur hear, &amp;ldquo;Yeah, but who&amp;rsquo;s going to use (and pay for) that?&amp;rdquo; in response to one of their ideas?&lt;/p&gt;

&lt;p&gt;This kind of zeal prevented us from making yet another recipe app or a product with questionable monetization potential.  I feel confident that at the very least the core Fixworthy product could make moves into a space where they were making life easier for powerful (read: those with budgets to spend on sotware) people&amp;rsquo;s lifes a bit easier, and especially given the generally low standard for UI on enterprise software I&amp;rsquo;m optimistic about the opportunities in that market for easy-to-use products that are marketed well.&lt;/p&gt;

&lt;h1 id=&#34;toc_5&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;I had a blast and learned a ton about technology and leading / working with a decent sized team.  We started the weekend with nothing and ended up with a company, however small and scrappy it was.  Best of all, we won.  &lt;a href=&#34;http://www.youtube.com/watch?v=GGXzlRoNtHU&amp;amp;feature=kp&#34;&gt;Who doesn&amp;rsquo;t like to win&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;I had an inkling that it might be so when we were some of the last participants to get shooed out of the common space on Saturday night, but I didn&amp;rsquo;t want to jinx us by bringing it up.  Besides, as all pseudo-mystics and hippies are so fond of pointing out, the journey is the destination.  Given that my last Startup Weekend company was less than satisfactory (though it was a long time ago), I couldn&amp;rsquo;t be any happier.&lt;/p&gt;

&lt;p&gt;Until next time, stay sassy Internet.  And don&amp;rsquo;t forget to keep hustlin&amp;rsquo;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nathan&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The Number One Dev Killer</title>
      <link>http://localhost:1313/posts/2014-02-08-the-number-one-dev-killer</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      
      <guid>http://localhost:1313/posts/2014-02-08-the-number-one-dev-killer</guid>
      <description>

&lt;p&gt;{%img /images/dev-killer/rage.gif One of those days? %}&lt;/p&gt;

&lt;p&gt;I frequently find myself fascinated by modern technology.  I mean, we went from computers that are the size of buildings to computers of equivalent power that fit in your pocket in ~50 years (I&amp;rsquo;ll leave you to decide if it&amp;rsquo;s sad or not that we use them mostly to look at pictures of cats and argue on the Internet).  A pretty impressive feat if you ask me, especially considering that 50 years is just about nothing in geographic terms.&lt;/p&gt;

&lt;p&gt;What always fascinates me the most, however, is people and how they interact with (and create!!) new technology.  Especially being immersed in developer culture, I&amp;rsquo;ve start to see the same patterns over and over again and begun learning what makes some projects (especially when people are working in isolation) fail to get traction, and what makes some projects so wildly successful.  So today I&amp;rsquo;m going to write about a story to demonstrate a point about the thing which is, in my opinion, a huge killer of developer productivity.&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;A Story About Mailing Lists&lt;/h1&gt;

&lt;p&gt;Do you recognize this guy?&lt;/p&gt;

&lt;p&gt;{%img /images/dev-killer/mailchimp.jpg %}&lt;/p&gt;

&lt;p&gt;Probably at least looks familiar, right?  It&amp;rsquo;s the &lt;a href=&#34;http://mailchimp.com&#34;&gt;MailChimp&lt;/a&gt; monkey.  How about this guy?&lt;/p&gt;

&lt;p&gt;{%img /images/dev-killer/hermes.jpg %}&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s &lt;a href=&#34;http://en.wikipedia.org/Hermes&#34;&gt;Hermes&lt;/a&gt;, the Greek god of communication.  But unless you&amp;rsquo;re a theology buff, Freddie the MailChimp mascot was probably a lot more meaningful to you in a modern context than Hermes.  So what?  Let me tell you a story to explain what I&amp;rsquo;ll be getting at.&lt;/p&gt;

&lt;p&gt;Now that I&amp;rsquo;ve started getting some traffic to my blog, and received a variety of emails from readers, I wanted to get a mailing list up.  You know, nothing fancy, just an email that I send out every once in a while to give people a chance to catch up with what I&amp;rsquo;ve been writing about this week.  So what do I do?&lt;/p&gt;

&lt;p&gt;I could use &lt;a href=&#34;http://mailchimp.com&#34;&gt;MailChimp&lt;/a&gt;, a rock-solid and proven standby that is good enough for people like &lt;a href=&#34;http://andrewchen.co&#34;&gt;Andrew Chen&lt;/a&gt; and &lt;a href=&#34;http://www.kalzumeus.com&#34;&gt;Patrick McKenzie&lt;/a&gt; and obviously should be good enough for me.  But what did I do?  Like a &amp;ldquo;good&amp;rdquo; hacker, I started writing my own (In addition to just wanting a cool project, for some reason I was embarassed about the possibility of people know that I use MailChimp.  I don&amp;rsquo;t know why, I guess I just have some kind of weird DIY fetish).  It was going to be called &lt;a href=&#34;http://github.com/nathanleclaire/hermes&#34;&gt;Hermes&lt;/a&gt;, written in Express/Node.js, and I was totally stoked.  Mostly because now I was going to attempt to re-invent MailChimp instead of doing more important, but less sexy, things with my time.&lt;/p&gt;

&lt;p&gt;I got about this far (I&amp;rsquo;m skipping over some boilerplate):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;javascript&#34;&gt;function sendSingleMail(subject, to) {
    getSignupEmailTemplate({
        to: to
    }, function(html) {
        mailgun.sendRaw(&amp;quot;Nathan LeClaire &amp;lt;nathan.leclaire@gmail.com&amp;gt;&amp;quot;, [to.email],
            &#39;From: nathan.leclaire@gmail.com&#39; +
            &#39;\nTo: &#39; + to.email +
            &#39;\nContent-Type: text/html; charset=utf-8&#39; +
            &#39;\nSubject: &#39; + subject + &#39;\n\n&#39; +
            html,
            function(err) {
                if (err) console.log(&amp;quot;there was an email error&amp;quot;, err);
                else console.log(&amp;quot;successfully sent email to &amp;quot; + to.email);
            }
        );
    });
}

function getSignupEmailTemplate(context, callback) {
    var tmpl = jade.renderFile(&amp;quot;views/signup-email.jade&amp;quot;, context, function(err, html) {
        if (err) {
            console.log(&amp;quot;error rendering jade template&amp;quot;);
        } else {
            callback(html);
        }
    });
}

function main(conn) {
    var subscribers = r.db(&amp;quot;hermes&amp;quot;).table(&amp;quot;subscriber&amp;quot;);
    app.post(&amp;quot;/email_signup&amp;quot;, function(req, res) {
        var email = req.body.email;
        subscribers.insert({
            email: email,
            name: &amp;quot;&amp;quot;,
            subscriptionConfirmed: false
        }).run(conn, function(err, result) {
            if (err) {
                console.log(&amp;quot;[ERROR] failed to insert email from someone... &amp;quot;, err);
                res.json({
                    success: false
                });
            } else {
                sendSingleMail(&amp;quot;Hi! I hear you&#39;d like to subscribe to my blog.&amp;quot;, {
                    email: email
                });
                res.json({
                    success: true
                });
            }
        });
    });

    app.listen(3001);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Before I started to say to myself: &amp;ldquo;Nate, are you being reasonable or are you just being cheap?  And why are you doing this instead of working on other, more low-hanging fruit to make your blog and side-projects more successful?  &lt;a href=&#34;http://github.com/nathanleclaire/checkforbrokenlinks&#34;&gt;Check For Broken Links&lt;/a&gt; &lt;em&gt;still&lt;/em&gt; hasn&amp;rsquo;t ever been deployed!&amp;rdquo;&lt;sup id=&#34;foot1return&#34;&gt;&lt;a href=&#34;#foot1&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.  Though the Check For Broken Links comment was a low blow, I knew I was right.&lt;/p&gt;

&lt;h1 id=&#34;toc_1&#34;&gt;Enlightenment&lt;/h1&gt;

&lt;p&gt;So I bit the bullet and used MailChimp instead.  You can see the results of my &amp;ldquo;labor&amp;rdquo; in the left sidebar of my blog, and I&amp;rsquo;m actually ecstatic I decided to go with them instead of writing my own mail management system.&lt;/p&gt;

&lt;p&gt;Why?  Because all of the time I saved by going the MailChimp route, instead of creating something original but inferior, allowed me to spend more time doing other, more valuable things.  For that matter, the influx of reader emails that I was anticipating and hoping for hasn&amp;rsquo;t really materialized, and at the time of writing I have all of two people on my mailing list :D (myself and my girlfriend- though I&amp;rsquo;m working on improving this).  I&amp;rsquo;m glad to have one less (giant) thing on my todo list, and I don&amp;rsquo;t feel like a failure since I didn&amp;rsquo;t waste a bunch of time on something that isn&amp;rsquo;t paying dividends right away (though I think it will in the future).  And I get all of the niceness, including analytics and a crazy awesome Web UI, for the small price of a MailChimp logo on my signup form.  Sign me up!&lt;/p&gt;

&lt;p&gt;Coming back to the Freddie the Chimp vs. Hermes comparison- Why use an untrusted brand / sketchy open source product when you can use a battle-hardened old friend?&lt;/p&gt;

&lt;p&gt;The point that I&amp;rsquo;m getting at, if you haven&amp;rsquo;t guessed it already, is that developers (as I did in this case) oftentimes get their potential productivity murdered, hard, by &lt;a href=&#34;http://en.wikipedia.org/wiki/Not_invented_here&#34;&gt;Not Invented Here Syndrome&lt;/a&gt;.  Who among us has met the stubbornly anti-framework programmers that always insist they could do a better job themselves, even with the absurd wealth of (oftentimes free) tools available for development nowadays?  How many client-side JavaScript MV* frameworks exist because their creators weren&amp;rsquo;t satisfied with simply improving existing solutions?  I know it&amp;rsquo;s an easy target, but allow me to list a few:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://angularjs.org&#34;&gt;Angular&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://backbonejs.org&#34;&gt;Backbone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://meteor.com/&#34;&gt;Meteor&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://facebook.github.io/react/&#34;&gt;React&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://twitter.github.io/flight/&#34;&gt;Flight&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fahad19.github.com/singool/&#34;&gt;Singool.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knockoutjs.com/&#34;&gt;Knockout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sammyjs.org/&#34;&gt;Sammy.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://emberjs.com/&#34;&gt;Ember.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/petermichaux/maria&#34;&gt;Maria&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://terrifically.org/composer/&#34;&gt;Terrific Composer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://rivetsjs.com/&#34;&gt;Rivets.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bruth.github.com/synapse/docs/&#34;&gt;Synapse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ractivejs.org/&#34;&gt;Ractive&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;{%img /images/dev-killer/incredulous.gif %}&lt;/p&gt;

&lt;p&gt;Yeah.&lt;/p&gt;

&lt;p&gt;Though he is speaking to a slightly different context, I feel that Keith Perhac breaks the issue down nicely in this &lt;a href=&#34;http://www.kalzumeus.com/2012/05/18/kalzumeus-podcast-ep-2-with-amy-hoy-pricing-products-and-passion/&#34;&gt;Kalzumeus Software Podcast&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And really, I think there’s also a… so, this is not just the Hacker News crowd, this is not just the Slashdot crowd, this is not just the techie crowd, there are a lot of people. I think the naysayers are the people who have more time than money, is honestly what it comes down to.&lt;/p&gt;

&lt;p&gt;Because, honestly, if I had a ton of time, if I was working a nine-to-five job, had a set number of hours a day I worked at a fixed income, at that, and I needed time-tracking software, I would probably write my own on the weekend because I have more time than I have money at that point.&lt;/p&gt;

&lt;p&gt;For someone who’s trying to run or start their own business, they suddenly have more money than they have time. Not that they’re making tons of money but because their time is much more valuable because there are so many other things they could be doing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This seems to be the gospel truth right here.  People can and should be focusing less on reinventing the wheel, and more on their core value proposition.&lt;/p&gt;

&lt;p&gt;Note that I&amp;rsquo;m mostly talking about things in the context of individual developers working by themselves, or in coordination with fairly small teams, not in large cutting-edge organizations such as the type discussed in &lt;a href=&#34;http://www.joelonsoftware.com/articles/fog0000000007.html&#34;&gt;this article by Joel Spolsky&lt;/a&gt;, where he makes an argument in favor of &amp;ldquo;Not Invented Here Syndrome&amp;rdquo;.  I agree with many of the points he makes here (no off-the-shelf web server will ever be as crazy fast as Google&amp;rsquo;s and that&amp;rsquo;s their business advantage), but I also feel like making an argument in favor of NIH is kind of dangerous.  Not that Joel has an obligation to look out for everyone&amp;rsquo;s best interests or anything, but I&amp;rsquo;d be shocked if he&amp;rsquo;d never come across a business situation where a company was investing waaaay too many resources into reinventing the wheel when they could have just bit the bullet.  This is, after all, the man who invented Wasabi, a specialized dialect of Visual Basic roasted hilariously in this post by his &lt;a href=&#34;http://www.codinghorror.com/blog/2006/09/has-joel-spolsky-jumped-the-shark.html&#34;&gt;future business partner Jeff Atwood&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;FogBugz is written in Wasabi, a very advanced, functional-programming dialect of Basic with closures and lambdas and Rails-like active records that can be compiled down to VBScript, JavaScript, PHP4 or PHP5. Wasabi is a private, in-house language written by one of our best developers that is optimized specifically for developing FogBugz; the Wasabi compiler itself is written in C#.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It may have worked for Fog Creek, but a lot of weird technical decisions have ended up working out for people (like &lt;a href=&#34;http://www.hhvm.com/blog/&#34;&gt;transpiling PHP to C++&lt;/a&gt;).  Would you want to maintain &lt;em&gt;that&lt;/em&gt; codebase?&lt;/p&gt;

&lt;h1 id=&#34;toc_2&#34;&gt;The Flipside&lt;/h1&gt;

&lt;p&gt;The flipside of this, of course, is equally poisionous, and I am going to describe a type of person that you and I both know to illustrate this point.  I think if you are involved in the technology community pretty heavily you will perhaps find this person eerily familiar.&lt;/p&gt;

&lt;p&gt;This type of person is passionate about technology.  In fact, they are so passionate about it that they become convinced that it is a panacea for every problem they might possibly encounter.  They put more importance on theoretical wanking and &amp;ldquo;purity&amp;rdquo; than on execution and delivery, and they jump from framework to framework without ever putting in any actual mental elbow grease.  They are a perennial &amp;ldquo;Hello Worlder&amp;rdquo;, always chasing after the hot new thing.&lt;/p&gt;

&lt;p&gt;They probably mock the PHP or Rails programmers who are too busy getting stuff done to hear or care.  They may have a passion for exploration and learning, which is good, but they lack wisdom and insight.  Often this can be the same kind of person who may be interested in starting their own company, but lacks the practical depth to find something that has good product/market fit.  Instead they may try to solve problems that nobody has, or let the technology choice dictate the business direction instead of the other way around.&lt;/p&gt;

&lt;p&gt;I have been this person on and off.  It&amp;rsquo;s no more fun them than it is to be around them.  I think one should shy away from being this guy, as much as one should shy away from being a NIHSer.  In my opinion, you should keep an open mind about things and not let your ego get in the way of being a developer who&amp;rsquo;s genuinely enjoyable to be on a team with.  Spoiler alert:  you are not right 100% of the time.&lt;/p&gt;

&lt;h1 id=&#34;toc_3&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Go forth and hack, sisters and brothers.  Just put some thought into using the right tool for the right job, and getting things done FAST instead of learning the newest hotness (which may cause you more headaches than it prevents).  There&amp;rsquo;s nothing wrong with a box running MySQL as its only database, or using just jQuery on your front end if that&amp;rsquo;s all you need, or developing an iOS app instead of an HTML5 one written with PhoneGap and AngularJS.  Let the tool fit the situation, and get things done (especially if you&amp;rsquo;re starting a company).&lt;/p&gt;

&lt;p&gt;Until next week, stay sassy Internet!  Oh, and subscribe to my mailing list already.  You&amp;rsquo;re killing me over here.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nathan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;span id=&#34;foot1&#34;&gt;&lt;a href=&#34;#foot1return&#34;&gt;(1)&lt;/a&gt;&lt;/span&gt; : It&amp;rsquo;s kind of like my &amp;ldquo;&lt;a href=&#34;http://en.wikipedia.org/wiki/Chinese_Democracy&#34;&gt;Chinese Democracy&lt;/a&gt;&amp;rdquo;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>